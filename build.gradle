buildscript {
    repositories {
        mavenCentral()
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
     }
}

plugins {
    id "com.github.dcendents.android-maven" version "1.5"
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'com.android.library'

//  Versions are x.y.z and version code is xxyyzz.  Leading 0s are stripped.
version = "0.2.1"
def versionNum = 201

android {
    compileSdkVersion 29
    buildToolsVersion "28.0.3"

    resourcePrefix "andele__"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 29
        versionCode versionNum
        versionName version

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

}

def siteUrl = 'https://github.com/hiqes/andele'
def gitUrl = 'https://github.com/hiqes/andele.git'

group = 'com.hiqes.andele'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'andele'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }
    }
}

Properties properties = new Properties()
def BINTRAY_USER = System.getenv('BINTRAY_USER')
def BINTRAY_APIKEY = System.getenv('BINTRAY_APIKEY')
if ((BINTRAY_USER == null) || (BINTRAY_APIKEY == null)) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} else {
    properties.setProperty("bintray.user", BINTRAY_USER)
    properties.setProperty("bintray.apikey", BINTRAY_APIKEY)
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "andele"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}


task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://maven.google.com"
        }
    }
}
